{"version":3,"sources":["components/header/index.js","components/header/header.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/error.jpg","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/index.js","components/itemList/itemList.js","components/charDetails/index.js","components/charDetails/charDetails.js","components/characterPage/index.js","components/characterPage/characterPage.js","components/app/app.js","components/app/index.js","index.js"],"names":["Header","Navbar","bg","variant","className","Brand","href","Nav","Link","GotService","getResource","url","a","fetch","_apiBase","res","ok","Error","status","json","_transformCharacter","char","name","isSet","gender","born","died","culture","this","id","result","map","character","data","house","region","words","titles","ancestralWeapons","book","numberOfPages","publisher","released","Spinner","ErrorMessage","src","img","alt","RandomChar","gotService","state","loading","error","onCharLoaded","setState","onError","err","updateCharacter","Math","floor","random","getCharacter","then","catch","timerId","setInterval","clearInterval","errorMessage","spinner","content","Card","Component","View","Body","ListGroup","Item","ItemList","charList","getAllCharacters","arr","item","i","onClick","props","onCharSelected","items","renderItems","CharDetails","updateChar","prevProps","charId","foo","bar","CharacterPage","selectedChar","Row","Col","md","span","offset","Page","styled","div","App","showRandomChar","toggleRandomChar","console","log","Container","Button","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec8f73e2.chunk.js","sourcesContent":["import Header from './header';\r\nexport default Header;","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport './header.css';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" className = 'shadow-lg'>\r\n      <Navbar.Brand href=\"#home\" className = \"pl-3\">Game of Thrones DB</Navbar.Brand>\r\n      <Nav className=\"ml-auto\">\r\n        <Nav.Link href=\"#characters\">Characters</Nav.Link>\r\n        <Nav.Link href=\"#houses\">Houses</Nav.Link>\r\n        <Nav.Link href=\"#books\">Books</Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n    );\r\n  };\r\n  \r\n  export default Header;","export default class GotService {\r\n  constructor() {\r\n    this._apiBase = 'https://www.anapioficeandfire.com/api';\r\n  }\r\n  getResource = async (url) => {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}` +\r\n        `, received ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  }\r\n\r\n  getAllBooks() {\r\n    return this.getResource(`/books/`);\r\n  }\r\n  \r\n  getBook(id) {\r\n    return this.getResource(`/books/${id}/`);\r\n  }\r\n  \r\n  async getAllCharacters() {\r\n    const result = await this.getResource(`/characters?page=5&pageSize=10`);\r\n    return result.map(this._transformCharacter); //сначала ждем результат getRes, и только потом вызываем map, когда рез вернется\r\n  }\r\n  \r\n  async getCharacter (id) {\r\n    const character = await this.getResource(`/characters/${id}`);\r\n    return this._transformCharacter(character)\r\n  }\r\n  \r\n  getAllHouses() {\r\n    return this.getResource(`/houses/`);\r\n  }\r\n  \r\n  getHouse(id) {\r\n    return this.getResource(`/houses/${id}/`);\r\n  }\r\n\r\n  isSet(data) {\r\n    if (data) {\r\n      return data\r\n    } else {\r\n      return 'no info :('\r\n    }\r\n  }    \r\n\r\n  _transformCharacter = (char) => {\r\n    return {\r\n      name: this.isSet(char.name),\r\n      gender: this.isSet(char.gender),\r\n      born: this.isSet(char.born),\r\n      died:this.isSet(char.died),\r\n      culture:this.isSet(char.culture)\r\n    }\r\n  }\r\n  _transformHouse(house) {\r\n    return {\r\n      name: this.isSet(house.name),\r\n      region: this.isSet(house.region),\r\n      words: this.isSet(house.words),\r\n      titles: this.isSet(house.titles),\r\n      ancestralWeapons: this.isSet(house.ancestralWeapons)\r\n    }\r\n  }\r\n  _transformBook(book) {\r\n    return {\r\n      name: this.isSet(book.name),\r\n      numberOfPages: this.isSet(book.numberOfPages),\r\n      publisher: this.isSet(book.publisher),\r\n      released: this.isSet(book.released)\r\n    }\r\n  }\r\n}","import Spinner from './spinner';\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n<div className=\"loadingio-spinner-spin-tjsbvd5ekf\">\r\n  <div className=\"ldio-567qf5qptkv\">\r\n  <div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\r\n  </div>\r\n</div>\r\n  )\r\n}\r\nexport default Spinner;\r\n\r\n","export default __webpack_public_path__ + \"static/media/error.09e0f651.jpg\";","import ErrorMessage from './errorMessage';\r\nexport default ErrorMessage;","import React from 'react';\r\nimport './errorMessage.css';\r\nimport img from './error.jpg';\r\n\r\nconst ErrorMessage = () => {\r\n  return(\r\n    <>\r\n      <img src={img} alt = 'error' className = 'pt-3 mx-auto'></img>\r\n      <span className = 'py-2 mx-auto rounded text-danger shadow-lg'>\r\n        Oh snap! Something goes wrong!\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import React, {Component} from 'react';\r\nimport './randomChar.css';\r\nimport {Card,ListGroup } from 'react-bootstrap';\r\nimport gotService from '../../services/gotService';\r\nimport Spinner from '../spinner';\r\nimport ErrorMessage from '../errorMessage';\r\n\r\nexport default class RandomChar extends Component {\r\n  gotService = new gotService ();\r\n  state = {\r\n    char: {},\r\n    loading: true,\r\n    error: false\r\n  }\r\n\r\n  componentDidMount() { //вызывается когда компонент успешно отрисовался и появился  на странице\r\n    this.updateCharacter(); \r\n    this.timerId = setInterval(this.updateCharacter,4000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerId);\r\n  }\r\n\r\n  onCharLoaded = (char) => {\r\n    this.setState({\r\n      char,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  onError = (err) => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  updateCharacter = () => {\r\n    const id = Math.floor(Math.random()*140+25); //от 25 до 140 персонажа\r\n    //const id = 13000;\r\n    this.gotService.getCharacter(id)\r\n      .then(this.onCharLoaded)\r\n      .catch(this.onError);\r\n  }\r\n\r\n  render() {\r\n    const {char, loading, error } = this.state;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error) ? <View char = {char}/> : null;\r\n\r\n  return (\r\n    <Card className = \"border-0 shadow-lg\"> \r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </Card>\r\n  );\r\n  }\r\n}\r\n\r\nconst View = ({char}) => {\r\n  const {name,gender,born,died,culture} = char;\r\n  return (\r\n    <>\r\n      <Card.Body className=\"text-center p-0\">\r\n      <Card.Header className=\"text-white bg-dark\">Random Character: {name}</Card.Header>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item className=\"d-flex justify-content-between\">\r\n              <span className=\"term\">Gender </span>\r\n              <span>{gender}</span>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"d-flex justify-content-between\">\r\n              <span className=\"term\">Born </span>\r\n              <span>{born}</span>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"d-flex justify-content-between\">\r\n              <span className=\"term\">Died </span>\r\n              <span>{died}</span>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"d-flex justify-content-between\">\r\n              <span className=\"term\">Culture </span>\r\n              <span>{culture}</span>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n      </Card.Body>\r\n    </>\r\n  )\r\n};\r\n","import RandomChar from './randomChar';\r\nexport default RandomChar;","import ItemList from './itemList';\r\n\r\nexport default ItemList;","import React, {Component} from 'react';\r\nimport './itemList.css';\r\nimport {ListGroup } from 'react-bootstrap';\r\nimport gotService from '../../services/gotService';\r\nimport Spinner from '../spinner';\r\n\r\nexport default class ItemList extends Component {\r\n  gotService = new gotService();\r\n\r\n  state = {\r\n    charList: null\r\n  }\r\n\r\ncomponentDidMount() {\r\n  this.gotService.getAllCharacters()\r\n   .then((charList) => {\r\n      this.setState({\r\n        charList\r\n    });\r\n   })\r\n}\r\n\r\nrenderItems(arr) {\r\n  return arr.map((item, i)=> {\r\n    return (\r\n      <ListGroup.Item \r\n      className = \"list-group-item\"\r\n      key={i}\r\n      onClick={ () => this.props.onCharSelected(41+i)}\r\n      >\r\n      {item.name}\r\n      </ListGroup.Item>\r\n    )\r\n  })\r\n}\r\n\r\nrender() {\r\n  const {charList} = this.state;\r\n\r\n  if(!charList) {\r\n    return <Spinner/>\r\n  }\r\n  const items = this.renderItems(charList);\r\n\r\n  return (\r\n    <ListGroup variant=\"flush\" className = \"rounded shadow-lg item-list\">\r\n      {items}\r\n    </ListGroup>\r\n  );\r\n}\r\n}","import CharDetails from './charDetails';\r\nexport default CharDetails;","import React, {Component} from 'react';\nimport './charDetails.css';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport gotService from '../../services/gotService';\n\nexport default class CharDetails extends Component {\n  gotService = new gotService();\n\n  state = {\n    char: null\n  }\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  updateChar() {\n    const {charId} = this.props;\n    if(!charId) {\n      return; \n    }\n    this.gotService.getCharacter(charId)\n      .then((char) => {\n        this.setState({char})\n      })\n      this.foo.bar = 0;\n  }\n\n  render() {\n    if(!this.state.char) {\n      return <span className = 'select-error'> Please, select a character </span>\n    }\n\n    const {name, gender, born, died, culture} = this.state.char;\n    return (\n    <Card className = \"border-0 shadow-lg\">\n      <Card.Body className=\"text-center p-0\">\n        <Card.Header className=\"text-white bg-dark\">{name}</Card.Header>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item className=\"d-flex justify-content-between\">\n            <span className=\"term\">Gender </span>\n            <span>{gender}</span>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"d-flex justify-content-between\">\n            <span className=\"term\">Born </span>\n            <span>{born}</span>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"d-flex justify-content-between\">\n            <span className=\"term\">Died </span>\n            <span>{died}</span>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"d-flex justify-content-between\">\n            <span className=\"term\">Culture </span>\n            <span>{culture}</span>\n          </ListGroup.Item>\n        </ListGroup>\n      </Card.Body>\n    </Card>\n    );\n  }\n}","import CharacterPage from './characterPage';\r\nexport default CharacterPage;","import React, {Component} from 'react';\nimport ItemList from '../itemList';\nimport CharDetails from '../charDetails';\nimport {Row, Col} from 'react-bootstrap';\nimport ErrorMessage from '../errorMessage';\n\nexport default class CharacterPage extends Component {\n  state = {\n    selectedChar: 130,\n    error: false\n  }\n\n  onCharSelected = (id) => {\n    this.setState({\n      selectedChar: id\n    })\n  }\n\n  componentDidCatch() {\n    this.setState({\n      error: true\n    })\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage/>\n    }\n    return (\n    <Row> \n      <Col md=\"5\" className = \"my-5\">\n        <ItemList onCharSelected= {this.onCharSelected}/>\n      </Col>\n      <Col md=\"6\" md={{ span: 5, offset: 1 }} className = \"my-5\">\n        <CharDetails  charId = {this.state.selectedChar}/>\n      </Col>\n    </Row>\n    )\n  }\n}","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport './app.css';\r\nimport {Container, Row, Col, Button} from 'react-bootstrap';\r\nimport Header from '../header';\r\nimport RandomChar from '../randomChar';\r\nimport ErrorMessage from '../errorMessage';\r\nimport CharacterPage from '../characterPage';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Page = styled.div`\r\n  max-width: 1200px;\r\n  min-height:100vh;\r\n  margin: auto;\r\n`;\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    showRandomChar: true,\r\n    error: false,\r\n  }\r\n\r\n  componentDidCatch() {\r\n    console.log('error');\r\n    this.setState({\r\n      error: true\r\n    })\r\n  }\r\n\r\n  toggleRandomChar = () => { \r\n    this.setState((state) => {\r\n      return {\r\n          showRandomChar: !state.showRandomChar\r\n      }\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {showRandomChar} = this.state;\r\n\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n    const char = showRandomChar ? <RandomChar/> : null;\r\n    return (\r\n      <>\r\n        <Page>\r\n          <Container className = \"shadow-lg\">\r\n            <Header />\r\n            <Container className = \"p-4\">\r\n              <Row>\r\n                <Col md=\"4\">\r\n                  {char}\r\n                </Col>\r\n              </Row>\r\n              <Button onClick={this.toggleRandomChar} variant=\"dark\" className = \"my-4 btn\">Toggle random character</Button>\r\n              <CharacterPage/>\r\n            </Container>\r\n          </Container>\r\n        </Page>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\n","import App from './app';\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}